# 2-matrix_divided.txt
# Test cases for 2-matrix_divided.py

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test with a normal matrix and integer divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Original matrix should not be modified
>>> matrix
[[1, 2, 3], [4, 5, 6]]

# Test with a normal matrix and float divisor
>>> matrix_divided(matrix, 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

# Test with a matrix containing floats
>>> matrix = [[1.1, 2.2, 3.3], [4.4, 5.5, 6.6]]
>>> matrix_divided(matrix, 2)
[[0.55, 1.1, 1.65], [2.2, 2.75, 3.3]]

# Test with division by 0
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test with non-number divisor
>>> matrix_divided(matrix, "School")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test with rows of different sizes
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test with a non-matrix input
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with a matrix containing non-numbers
>>> matrix = [[1, 2, "3"], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
